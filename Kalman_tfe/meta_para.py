#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Apr 25 10:21:56 2021

@author: kdesousa




JE DOIS changer/Adapter TOUT SES PARA
"""
import math
import numpy as np






# kalman

associate_det_one = True



#obstruction_thresh = 0.0
min_det_obstruction = 5 #nope
max_invisible_obs = 10 #200
min_obs_front = 0 #influence pas

new_thresh = 50




delta_time = 1/30 
min_dist_gate = 3#0.28 #influence
lambda_fp = 1 #math.sqrt(2*math.pi)*4.0 #parametre useless
max_invisible_no_obs = 6 #influence



# Matrices 

vari_Q = np.array(
     [[0.005,0.0,0.0,0.0,0.0,0.0],\
     [0.0,0.001,0.0,0.0,0.0,0.0],\
     [0.0,0.0,0.001,0.0,0.0,0.0],\
     [0.0,0.0,0.0,0.05,0.0,0.0],\
     [0.0,0.0,0.0,0.0,0.05,0.0],\
     [0.0,0.0,0.0,0.0,0.0,0.02]]) *100/30#influence
# vari_R_c = np.array(
#      [[0.5,0.0,0.0,0.0,0.0,0.0],\
#      [0.0,0.3,0.0,0.0,0.0,0.0],\
#      [0.0,0.0,0.3,0.0,0.0,0.0],\
#      [0.0,0.0,0.0,0.1,0.0,0.0],\
#      [0.0,0.0,0.0,0.0,0.1,0.0],\
#      [0.0,0.0,0.0,0.0,0.0,0.1]])

# vari_R_r = np.array(
#      [[0.5,0.0,0.0,0.0,0.0,0.0],\
#      [0.0,5.0,0.0,0.0,0.0,0.0],\
#      [0.0,0.0,5.0,0.0,0.0,0.0],\
#      [0.0,0.0,0.0,5,0.0,0.0],\
#      [0.0,0.0,0.0,0.0,0.1,0.0],\
#      [0.0,0.0,0.0,0.0,0.0,0.1]])
#init_P = np.diag(6*[1])*0.1
init_P = np.array(
      [[100.0,0.0,0.0,0.0,0.0,0.0],\
      [0.0,50.0,0.0,0.0,0.0,0.0],\
      [0.0,0.0,50.0,0.0,0.0,0.0],\
      [0.0,0.0,0.0,100.0,0.0,0.0],\
      [0.0,0.0,0.0,0.0,50.0,0.0],\
      [0.0,0.0,0.0,0.0,0.0,50.0]]) #n'influenc epas
vari_R_r = np.linalg.inv(np.array(
      [[11.0,0,0.0,0.0,0.0,0.0],\
      [0,0.000223217,0.0,0.0,0.0,0.0],\
       [0.0,0.0,0.00616422,0.0,0.0,0.0],\
      [0.0,0.0,0.0,13.5,0.0,0.0],\
      [0.0,0.0,0.0,0.0,1e-10,0.0],\
      [0.0,0.0,0.0,0.0,0.0,1e-10]]))
vari_R_c =np.linalg.inv( np.array(
      [[50,0.0,0.0,0.0,0.0,0.0],\
      [0.0,1.13e-5,0.0,0.0,0.0,0.0],\
      [0.0,0.0,4.41969e-05,0.0,0.0,0.0],\
      [0.0,0.0,0.0,136.0,0.0,0.0],\
      [0.0,0.0,0.0,0.0,1e-10,0.0],\
      [0.0,0.0,0.0,0.0,0.0,1e-10]]))
# vari_R_r = np.linalg.inv(np.array(
#       [[11.0,0,0.0,0.0,0.0,0.0],\
#       [0,0.000223217,0.0,0.0,0.0,0.0],\
#       [0.0,0.0,0.00616422,0.0,0.0,0.0],\
#       [0.0,0.0,0.0,13.5,0.0,0.0],\
#       [0.0,0.0,0.0,0.0,1e-10,0.0],\
#       [0.0,0.0,0.0,0.0,0.0,1e-10]]))
# vari_R_c =np.linalg.inv( np.array(
#       [[50,0.0,0.0,0.0,0.0,0.0],\
#       [0.0,1.13e-5,0.0,0.0,0.0,0.0],\
#       [0.0,0.0,4.41969e-05,0.0,0.0,0.0],\
#       [0.0,0.0,0.0,136.0,0.0,0.0],\
#       [0.0,0.0,0.0,0.0,1e-10,0.0],\
#       [0.0,0.0,0.0,0.0,0.0,1e-10]]))
"backup"
# vari_R_r = np.linalg.inv(np.array(
#       [[1.0,0,0.0,0.0,0.0,0.0],\
#       [0,1,0.0,0.0,0.0,0.0],\
#       [0.0,0.0,1.0,0.0,0.0,0.0],\
#       [0.0,0.0,0.0,5,0.0,0.0],\
#       [0.0,0.0,0.0,0.0,10.0,0.0],\
#       [0.0,0.0,0.0,0.0,0.0,10.0]]))
# vari_R_c =np.linalg.inv( np.array(
#       [[1.5,0.0,0.0,0.0,0.0,0.0],\
#       [0.0,4,0.0,0.0,0.0,0.0],\
#       [0.0,0.0,3.0,0.0,0.0,0.0],\
#       [0.0,0.0,0.0,15.0,0.0,0.0],\
#       [0.0,0.0,0.0,0.0,10.0,0.0],\
#       [0.0,0.0,0.0,0.0,0.0,10.0]]))
"validation experimentale"
init_P = np.array(
      [[100.0,0.0,0.0,0.0,0.0,0.0],\
      [0.0,50.0,0.0,0.0,0.0,0.0],\
      [0.0,0.0,50.0,0.0,0.0,0.0],\
      [0.0,0.0,0.0,100.0,0.0,0.0],\
      [0.0,0.0,0.0,0.0,50.0,0.0],\
      [0.0,0.0,0.0,0.0,0.0,50.0]]) #n'influenc epas
vari_R_r = np.linalg.inv(np.array(
      [[5.0,0,0.0,0.0,0.0,0.0],\
      [0,10,0.0,0.0,0.0,0.0],\
        [0.0,0.0,50,0.0,0.0,0.0],\
      [0.0,0.0,0.0,13.5,0.0,0.0],\
      [0.0,0.0,0.0,0.0,1e-10,0.0],\
      [0.0,0.0,0.0,0.0,0.0,1e-10]]))
vari_R_c =np.linalg.inv( np.array(
      [[50,0.0,0.0,0.0,0.0,0.0],\
      [0.0,1,0.0,0.0,0.0,0.0],\
      [0.0,0.0,1,0.0,0.0,0.0],\
      [0.0,0.0,0.0,136.0,0.0,0.0],\
      [0.0,0.0,0.0,0.0,1e-10,0.0],\
      [0.0,0.0,0.0,0.0,0.0,1e-10]]))
vari_Q = np.array(
      [[0.274,0.0,0.0,0.0,0.0,0.0],\
      [0.0,0.1,0.0,0.0,0.0,0.0],\
      [0.0,0.0,0.1,0.0,0.0,0.0],\
      [0.0,0.0,0.0,0.175,0.0,0.0],\
      [0.0,0.0,0.0,0.0,5,0.0],\
      [0.0,0.0,0.0,0.0,0.0,5]]) #influence
delta_time = 1/20
#obstruction_thresh = 0.0
min_det_obstruction = 5 #nope
max_invisible_obs = 200

new_thresh = 1


min_dist_gate = 30#0.28 #influence
lambda_fp = 1 #math.sqrt(2*math.pi)*4.0 #parametre useless
max_invisible_no_obs = 10 #influence